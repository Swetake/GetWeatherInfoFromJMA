<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RegularFeed" xml:space="preserve">
    <value>Regular Feed</value>
    <comment>property group</comment>
  </data>
  <data name="ExtraFeed" xml:space="preserve">
    <value>Extra Feed</value>
    <comment>property group</comment>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
    <comment>property group</comment>
  </data>
  <data name="WeatherInfoScopeDisplayName" xml:space="preserve">
    <value>Weather Info Scope</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDescription" xml:space="preserve">
    <value>The scope is for obtaining Weather Info XML from JMA</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqRegularDescription" xml:space="preserve">
    <value>Enable Default High Freq Periodic</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqRegularDisplayName" xml:space="preserve">
    <value>Default High Freq</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeURLRegularDescription" xml:space="preserve">
    <value>URL or Filepath for Preodic Feed</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeURLRegularDisplayName" xml:space="preserve">
    <value>URL Regular</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermPeriodicDescription" xml:space="preserve">
    <value>Enable Default Long Term</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermPeriodicDisplayName" xml:space="preserve">
    <value>Default Long Term</value>
    <comment>display name</comment>
  </data>
  <data name="MetadataValidationError" xml:space="preserve">
    <value>Please provide a value for {0}</value>
    <comment>validation error</comment>
  </data>
  <data name="GetWarningDescription" xml:space="preserve">
    <value>Get Warning in WeatherInfoScope</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningDisplayName" xml:space="preserve">
    <value>Get Warning</value>
    <comment>display name</comment>
  </data>
  <data name="GetWarningAreaDescription" xml:space="preserve">
    <value>Area which you want to get warning</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningAreaDisplayName" xml:space="preserve">
    <value>Area</value>
    <comment>display name</comment>
  </data>
  <data name="GetWarningKeyNameSeparatorDescription" xml:space="preserve">
    <value>Separator b/w large area and small area</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningKeyNameSeparatorDisplayName" xml:space="preserve">
    <value>KeyNameSeparator</value>
    <comment>display name</comment>
  </data>
  <data name="GetWarningIgnoreIdListDescription" xml:space="preserve">
    <value>ID list to be ignored</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningIgnoreIdListDisplayName" xml:space="preserve">
    <value>IgnoreIdList</value>
    <comment>display name</comment>
  </data>
  <data name="EqVolFeed" xml:space="preserve">
    <value>Eq Vol Feed</value>
    <comment>property group</comment>
  </data>
  <data name="OtherFeed" xml:space="preserve">
    <value>Other Feed</value>
    <comment>property group</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqExtraDescription" xml:space="preserve">
    <value>Enable Default High Freq As Needed</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqExtraDisplayName" xml:space="preserve">
    <value>Default High Freq</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqEqVolDescription" xml:space="preserve">
    <value>Enable Default High Freq Earthquake Volcano</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqEqVolDisplayName" xml:space="preserve">
    <value>Default High Freq</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqOtherDescription" xml:space="preserve">
    <value>Enable Default High Freq Other</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultHighFreqOtherDisplayName" xml:space="preserve">
    <value>Default High Freq</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermExtraDescription" xml:space="preserve">
    <value>Enable Default Long Term</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermExtraDisplayName" xml:space="preserve">
    <value>Default Long Term</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermEqVolDescription" xml:space="preserve">
    <value>Enable Default Long Term</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermEqVolDisplayName" xml:space="preserve">
    <value>Default Long Term</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermOtherDescription" xml:space="preserve">
    <value>Enable Default Long Term</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeDefaultLongTermOtherDisplayName" xml:space="preserve">
    <value>Default Long Term</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeOutputDescription" xml:space="preserve">
    <value>Output Feeds as Dictionary type</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeOutputDisplayName" xml:space="preserve">
    <value>Output Feeds</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeURLExtraDescription" xml:space="preserve">
    <value>URL or Filepath for As Needed Feed</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeURLExtraDisplayName" xml:space="preserve">
    <value>URL Extra</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeURLEqVolDescription" xml:space="preserve">
    <value>URL or Filepath for Earthquake Volcano Feed</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeURLEqVolDisplayName" xml:space="preserve">
    <value>URL EqVc</value>
    <comment>display name</comment>
  </data>
  <data name="WeatherInfoScopeURLOtherDescription" xml:space="preserve">
    <value>URL or Filepath for Other Feed</value>
    <comment>description</comment>
  </data>
  <data name="WeatherInfoScopeURLOtherDisplayName" xml:space="preserve">
    <value>URL Other</value>
    <comment>display name</comment>
  </data>
  <data name="UrlDefaultHighFreqEqVol" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/eqvol.xml</value>
  </data>
  <data name="UrlDefaultHighFreqExtra" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/extra.xml</value>
  </data>
  <data name="UrlDefaultHighFreqOther" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/other.xml</value>
  </data>
  <data name="UrlDefaultHighFreqRegular" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/regular.xml</value>
  </data>
  <data name="UrlDefaultLongTermEqVol" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/eqvol_l.xml</value>
  </data>
  <data name="UrlDefaultLongTermExtra" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/extra_l.xml</value>
  </data>
  <data name="UrlDefaultLongTermOther" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/other_l.xml</value>
  </data>
  <data name="UrlDefaultLongTermRegular" xml:space="preserve">
    <value>https://www.data.jma.go.jp/developer/xml/feed/regular_l.xml</value>
  </data>
  <data name="GetWarningProcessedIdListDescription" xml:space="preserve">
    <value>IDs which have been processed</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningProcessedIdListDisplayName" xml:space="preserve">
    <value>Processed ID List</value>
    <comment>display name</comment>
  </data>
  <data name="GetWarningResultDescription" xml:space="preserve">
    <value>Result</value>
    <comment>description</comment>
  </data>
  <data name="GetWarningResultDisplayName" xml:space="preserve">
    <value>Result</value>
    <comment>display name</comment>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="GetXmlAtomFeedTypeDescription" xml:space="preserve">
    <value>AtomFeedType</value>
  </data>
  <data name="GetXmlAtomFeedTypeDisplayName" xml:space="preserve">
    <value>AtomFeedType</value>
  </data>
  <data name="GetXmlDescription" xml:space="preserve">
    <value>Get specific XML </value>
  </data>
  <data name="GetXmlDisplayName" xml:space="preserve">
    <value>Get XML</value>
  </data>
  <data name="GetXmlInformationNameDescription" xml:space="preserve">
    <value>InformationName (Should be Japanese)</value>
  </data>
  <data name="GetXmlInformationNameDisplayName" xml:space="preserve">
    <value>InformationName</value>
  </data>
  <data name="GetXmlMeteorologicalOfficeDescription" xml:space="preserve">
    <value>MeteorologicalOfficeName (Should be Japanese)</value>
  </data>
  <data name="GetXmlMeteorologicalOfficeName" xml:space="preserve">
    <value>MeteorologicalOfficeName</value>
  </data>
  <data name="GetXmlResultDescription" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetXmlResultDisplayName" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetXmlReturnAllMatchesDescription" xml:space="preserve">
    <value>Return All Matches</value>
  </data>
  <data name="GetXmlReturnAllMatchesDisplayName" xml:space="preserve">
    <value>Return All Matches</value>
  </data>
  <data name="GetAtomFeedDescription" xml:space="preserve">
    <value>GetAtomFeed</value>
  </data>
  <data name="GetAtomFeedDisplayName" xml:space="preserve">
    <value>GetAtomFeed</value>
  </data>
  <data name="GetAtomFeedResultDescription" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetAtomFeedResultDisplayName" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetForecastDescription" xml:space="preserve">
    <value>GetWeatherForecast</value>
  </data>
  <data name="GetForecastDisplayName" xml:space="preserve">
    <value>GetForecast</value>
  </data>
  <data name="GetForecastResultDescription" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetForecastResultDisplayName" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetForecastAreaDescription" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="GetForecastAreaDisplayName" xml:space="preserve">
    <value>Area</value>
  </data>
</root>